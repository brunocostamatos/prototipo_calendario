{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/teste_versao_direta/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from \"react\";\nimport GetSpreaker from \"../src/getSpreaker.js\";\nimport GetEpisode from \"../src/getEpisode.js\";\nimport GetDescription from \"../src/getDescription.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [podcast, setPodcast] = useState([]);\n  const [dados, setDados] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [listaProgramas, setListaProgramas] = useState([]);\n  const [programaNoticia, setProgramaNoticia] = useState([]);\n  const [listaEpisodios, setListaEpisodios] = useState([]);\n  const [listaNoticias, setListaNoticias] = useState([]);\n  const [descricaoEpisodio, setDescricaoEpisodio] = useState([]);\n  useEffect(() => {\n    GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia);\n    GetEpisode(4119263, setListaNoticias, 0); //GetDescription(43826958, setDescricaoEpisodio) //Pegando a descrição de forma estática de um episodio em específico \n  }, []);\n\n  function cria_player(lista_ordenada_episodios) {\n    lista_ordenada_episodios = lista_ordenada_episodios;\n    const iframe = document.createElement('iframe');\n    const html = \"https://widget.spreaker.com/player?episode_id=\" + lista_ordenada_episodios.episode_id + \"&hide-logo=true\";\n    /*No link https://developers.spreaker.com/guides/embedding-the-player/ ele mostra as opções que existem no player, como mudaça para o tema dark, autoplay e \n    coisas do genero. Para implementar tais opções, só é necessario adicionar após a variável de ID do episodio ou do show um &... \n    Como está acima, &theme=dark ativa o tema dark, se fosse uma opção como hide-logo seria &hide-logo=true. */\n\n    iframe.src = html;\n    iframe.sandbox = 'allow-scripts allow-popups';\n    iframe.width = \"50%\";\n    iframe.height = \"100px\";\n    iframe.frameborder = \"0\";\n    document.body.appendChild(iframe);\n  }\n\n  function getImages() {\n    if (listaNoticias != undefined) {\n      const listaNoticiasArrumada = listaNoticias.sort((a, b) => parseInt(b.episodio_id) - parseInt(a.episodio_id));\n      console.log(listaNoticiasArrumada);\n    }\n\n    const listaProgramasFiltrada = listaProgramas.sort((a, b) => b.datacao_filtrada - a.datacao_filtrada);\n    let content = [];\n\n    for (let el in listaProgramasFiltrada) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => GetEpisode(listaProgramasFiltrada[el].show_id, 0, setListaEpisodios),\n        alt: \"Avatar\",\n        src: listaProgramasFiltrada[el].image_url,\n        width: 176,\n        height: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this));\n    }\n\n    if (programaNoticia[0] != undefined) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: programaNoticia[0].image_url,\n        width: 176,\n        height: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this));\n    }\n\n    if (listaNoticias.response != undefined) {\n      for (let el in listaNoticias.response.items) {\n        content.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [listaNoticias.response.items[el].title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: descricaoEpisodio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cria_player(listaNoticias.response.items[el]),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 189\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 198\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this));\n      }\n    }\n\n    return content;\n  }\n\n  if (listaNoticias !== []) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {},\n        src: \"fundo_broadcast.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", dados.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), dados.image_url !== undefined && getImages()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Main, \"x6oZhnsYCMHTWc3hG5tyVBYwprM=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/teste_versao_direta/src/App.js"],"names":["React","Component","useEffect","useState","GetSpreaker","GetEpisode","GetDescription","Main","podcast","setPodcast","dados","setDados","userID","setUserID","listaProgramas","setListaProgramas","programaNoticia","setProgramaNoticia","listaEpisodios","setListaEpisodios","listaNoticias","setListaNoticias","descricaoEpisodio","setDescricaoEpisodio","cria_player","lista_ordenada_episodios","iframe","document","createElement","html","episode_id","src","sandbox","width","height","frameborder","body","appendChild","getImages","undefined","listaNoticiasArrumada","sort","a","b","parseInt","episodio_id","console","log","listaProgramasFiltrada","datacao_filtrada","content","el","push","show_id","image_url","response","items","title","fullname"],"mappings":"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","sourcesContent":["import {\n  React,\n  Component,\n  useEffect,\n  useState\n} from \"react\";\n\nimport GetSpreaker from \"../src/getSpreaker.js\"\nimport GetEpisode from \"../src/getEpisode.js\"\nimport GetDescription from \"../src/getDescription.js\"\n\n\n\nfunction Main() {\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [userID, setUserID] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n  const [programaNoticia, setProgramaNoticia] = useState([])\n  const [listaEpisodios, setListaEpisodios] = useState([])\n  const [listaNoticias, setListaNoticias] = useState([])\n  const [descricaoEpisodio, setDescricaoEpisodio] = useState([])\n  \n  useEffect(() => {\n    GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia)\n    GetEpisode(4119263, setListaNoticias, 0)\n    //GetDescription(43826958, setDescricaoEpisodio) //Pegando a descrição de forma estática de um episodio em específico \n  }, []);\n\n\n  \n  function cria_player(lista_ordenada_episodios){\n    lista_ordenada_episodios = lista_ordenada_episodios\n    const iframe = document.createElement('iframe');\n    const html = \"https://widget.spreaker.com/player?episode_id=\"  + lista_ordenada_episodios.episode_id + \"&hide-logo=true\"; \n    /*No link https://developers.spreaker.com/guides/embedding-the-player/ ele mostra as opções que existem no player, como mudaça para o tema dark, autoplay e \n    coisas do genero. Para implementar tais opções, só é necessario adicionar após a variável de ID do episodio ou do show um &... \n    Como está acima, &theme=dark ativa o tema dark, se fosse uma opção como hide-logo seria &hide-logo=true. */ \n    iframe.src = html;\n    iframe.sandbox = 'allow-scripts allow-popups';\n    iframe.width = \"50%\";\n    iframe.height=\"100px\";\n    iframe.frameborder=\"0\";\n    document.body.appendChild(iframe);\n  }\n\n  function getImages(){\n    if(listaNoticias != undefined){\n      const listaNoticiasArrumada = listaNoticias.sort((a, b) => parseInt(b.episodio_id) - parseInt(a.episodio_id));\n    console.log(listaNoticiasArrumada)\n    }\n    \n    \n\n    const listaProgramasFiltrada = listaProgramas.sort((a, b) => b.datacao_filtrada - a.datacao_filtrada)\n\n    \n    let content = []\n    for (let el in listaProgramasFiltrada){\n      content.push(<img onClick={() => GetEpisode(listaProgramasFiltrada[el].show_id, 0,setListaEpisodios)}\n        alt=\"Avatar\" src={listaProgramasFiltrada[el].image_url} width={176} height={180}/>)\n\n    }\n    if(programaNoticia[0]!= undefined){\n      content.push(<img \n      alt=\"Avatar\" src={programaNoticia[0].image_url} width={176} height={180}/>)\n    }\n    if(listaNoticias.response != undefined){\n      for(let el in listaNoticias.response.items){\n        \n        content.push(<div>{listaNoticias.response.items[el].title}<br></br><span>{descricaoEpisodio}</span><button onClick={()=>cria_player(listaNoticias.response.items[el])}>Play</button><br></br><br></br></div>)\n      }\n    }\n\n    return content\n\n    \n   }\n \n  \n  if (listaNoticias !== []) {\n    return (\n      <div>\n        <img style={{}} src=\"fundo_broadcast.png\"/>\n\n      \n        <p>Resultados para: {dados.fullname}</p>\n       {dados.image_url !== undefined &&(\n        getImages()\n        \n       )}\n       \n\n      </div>\n    )\n   \n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}