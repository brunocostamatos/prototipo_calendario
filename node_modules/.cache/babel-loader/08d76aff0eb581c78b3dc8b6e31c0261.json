{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\";\nimport React, { Component } from \"react\"; // Let's import React, our styles and React Async\n\nimport './App.css'; // This is the API we'll use to request user data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst loadUsers = () => fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.ok ? res : Promise.reject(res)).then(res => res.json()); // Our App component\n\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Async, {\n      promiseFn: loadUsers,\n      children: [/*#__PURE__*/_jsxDEV(Async.Loading, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Async.Fulfilled, {\n        children: data => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"React Async - Random Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), data.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 23\n              }, this)\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Async.Rejected, {\n        children: error => `Something went wrong: ${error.message}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","loadUsers","fetch","then","res","ok","Promise","reject","json","App","data","map","user","name","email","username","error","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AAEA,OAAO,WAAP,C,CAGA;;;;AACA,MAAMC,SAAS,GAAG,MAChBC,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAKA,GAAG,CAACC,EAAJ,GAASD,GAAT,GAAeE,OAAO,CAACC,MAAR,CAAeH,GAAf,CAD/B,EAEGD,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EAFf,CADF,C,CAKA;;;AACA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAER,SAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD,CAAO,SAAP;AAAA,kBACGS,IAAI,IAAI;AACP,8BACE;AAAA,oCACE;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGA,IAAI,CAACC,GAAL,CAASC,IAAI,iBACZ;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACE;AAAA,4BAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAAUF,IAAI,CAACG,QAAf;AAAA;AAAA;AAAA;AAAA,oBADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAeD;AAjBH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAqBI,QAAC,KAAD,CAAO,QAAP;AAAA,kBACGC,KAAK,IAAK,yBAAwBA,KAAK,CAACC,OAAQ;AADnD;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;KA9BQR,G;AAgCT,eAAeA,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\n// Let's import React, our styles and React Async\n\nimport './App.css';\n\n\n// This is the API we'll use to request user data\nconst loadUsers = () =>\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => (res.ok ? res : Promise.reject(res)))\n    .then(res => res.json())\n\n// Our App component\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Async promiseFn={loadUsers}>\n          <Async.Loading>Loading...</Async.Loading>\n          <Async.Fulfilled>\n            {data => {\n              return (\n                <div>\n                  <div>\n                    <h2>React Async - Random Users</h2>\n                  </div>\n                  {data.map(user=> (\n                    <div key={user.username} className=\"row\">\n                      <div className=\"col-md-12\">\n                        <p>{user.name}</p>\n                        <p>{user.email}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )\n            }}\n          </Async.Fulfilled>\n          <Async.Rejected>\n            {error => `Something went wrong: ${error.message}`}\n          </Async.Rejected>\n      </Async>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}