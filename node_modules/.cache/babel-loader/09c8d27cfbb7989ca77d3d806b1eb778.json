{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useAsync } from \"react-async\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchPerson = async ({\n  id\n}, {\n  signal\n}) => {\n  const response = await fetch(`https://swapi.co/api/people/${id}/`, {\n    signal\n  });\n  if (!response.ok) throw new Error(response.status);\n  return response.json();\n};\n\nconst Person = ({\n  id\n}) => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useAsync({\n    promiseFn: fetchPerson,\n    id\n  });\n  if (error) return error.message;\n  if (data) return `Hi, my name is ${data.name}!`;\n  return null;\n};\n\n_s(Person, \"rna7VggVtg3DciccRWGxlU52QEM=\", false, function () {\n  return [useAsync];\n});\n\n_c = Person;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Person, {\n    id: 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","useAsync","fetchPerson","id","signal","response","fetch","ok","Error","status","json","Person","data","error","promiseFn","message","name","App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,WAAW,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,EAAe;AAAEC,EAAAA;AAAF,CAAf,KAA8B;AAChD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BH,EAAG,GAAnC,EAAuC;AAAEC,IAAAA;AAAF,GAAvC,CAA5B;AACA,MAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,MAAnB,CAAN;AAClB,SAAOJ,QAAQ,CAACK,IAAT,EAAP;AACD,CAJD;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACzB,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBZ,QAAQ,CAAC;AAAEa,IAAAA,SAAS,EAAEZ,WAAb;AAA0BC,IAAAA;AAA1B,GAAD,CAAhC;AACA,MAAIU,KAAJ,EAAW,OAAOA,KAAK,CAACE,OAAb;AACX,MAAIH,IAAJ,EAAU,OAAQ,kBAAiBA,IAAI,CAACI,IAAK,GAAnC;AACV,SAAO,IAAP;AACD,CALD;;GAAML,M;UACoBV,Q;;;KADpBU,M;;AAON,MAAMM,GAAG,GAAG,MAAM;AAChB,sBAAO,QAAC,MAAD;AAAQ,IAAA,EAAE,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMA,G","sourcesContent":["import React from \"react\"\nimport { useAsync } from \"react-async\"\n\nconst fetchPerson = async ({ id }, { signal }) => {\n  const response = await fetch(`https://swapi.co/api/people/${id}/`, { signal })\n  if (!response.ok) throw new Error(response.status)\n  return response.json()\n}\n\nconst Person = ({ id }) => {\n  const { data, error } = useAsync({ promiseFn: fetchPerson, id })\n  if (error) return error.message\n  if (data) return `Hi, my name is ${data.name}!`\n  return null\n}\n\nconst App = () => {\n  return <Person id={1} />\n}"]},"metadata":{},"sourceType":"module"}