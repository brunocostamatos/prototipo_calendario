{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/components/Live.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, Fragment, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LIVE } from '../graphql/Query';\nimport Cover from './Cover';\nimport srcBg from '../assets/img/bg.png';\nimport AnimatedLiveIcon from './LiveIcon';\nimport styles from '../assets/css';\nimport PlayerContext from '../utils/audio';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  icons,\n  shadow,\n  components\n} = styles;\nconst {\n  live: styleLive,\n  cover: styleCover\n} = components;\nexport function LivePlayer() {\n  _s();\n\n  let {\n    data\n  } = useQuery(GET_LIVE);\n  const context = useContext(PlayerContext);\n  const pauseState = useState(context.paused);\n\n  if (!data) {\n    data = {\n      live: {\n        url: '',\n        statusUrl: '',\n        cover: '',\n        content: {\n          cover: null,\n          name: 'Rádio UFRJ',\n          clock: '-',\n          singer: '-',\n          music: '-',\n          author: '-'\n        }\n      }\n    };\n  }\n\n  const {\n    content,\n    cover,\n    url,\n    statusUrl\n  } = data.live;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: styleLive.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styleLive.current} ${shadow.up}`,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styleLive.header,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styleLive.name,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styleLive.title,\n            children: \"Ao Vivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedLiveIcon, {\n            className: styleLive.icon,\n            state: pauseState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        statusUrl: statusUrl,\n        content: content,\n        cover: cover,\n        url: url,\n        context: context,\n        state: pauseState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LivePlayer, \"lg5InEuA3FiN6SrnzqDbcv6Pt7A=\", false, function () {\n  return [useQuery];\n});\n\n_c = LivePlayer;\n\nfunction Content({\n  statusUrl,\n  content,\n  cover,\n  url,\n  context,\n  state\n}) {\n  _s2();\n\n  const [status, setStatus] = useState({});\n  useEffect(() => {\n    if (!statusUrl) return;\n    const id = setInterval(() => {\n      fetch(statusUrl).then(res => res.json()).then(({\n        currentTrack\n      }) => {\n        const [music, singer] = currentTrack.split(' - ');\n        setStatus({\n          music,\n          singer\n        });\n      });\n    }, 2000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [context, setStatus, statusUrl]);\n  const realCover = status.cover || content.cover || cover;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styleLive.info,\n      children: [/*#__PURE__*/_jsxDEV(Cover, {\n        cover: realCover,\n        url: url,\n        context: context,\n        state: state,\n        styleClass: components.live.btnToggle,\n        isLive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styleLive.text,\n        children: /*#__PURE__*/_jsxDEV(\"footer\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: icons.music_note,\n            children: status.music || content.music\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: icons.singer,\n            children: status.singer || content.singer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styleCover.bgClean,\n      src: srcBg,\n      alt: \"Capa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(Content, \"VI/7xQSjEASR9awoaEV0/mpXyco=\");\n\n_c2 = Content;\nexport default LivePlayer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LivePlayer\");\n$RefreshReg$(_c2, \"Content\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/components/Live.jsx"],"names":["React","useContext","useState","Fragment","useEffect","useQuery","GET_LIVE","Cover","srcBg","AnimatedLiveIcon","styles","PlayerContext","icons","shadow","components","live","styleLive","cover","styleCover","LivePlayer","data","context","pauseState","paused","url","statusUrl","content","name","clock","singer","music","author","container","current","up","header","title","icon","Content","state","status","setStatus","id","setInterval","fetch","then","res","json","currentTrack","split","clearInterval","realCover","info","btnToggle","text","music_note","bgClean"],"mappings":"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","sourcesContent":["import React, { useContext, useState, Fragment, useEffect } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_LIVE } from '../graphql/Query'\n\nimport Cover from './Cover'\n\nimport srcBg from '../assets/img/bg.png'\n\nimport AnimatedLiveIcon from './LiveIcon'\nimport styles from '../assets/css'\n\nimport PlayerContext from '../utils/audio'\n\nconst { icons, shadow, components } = styles\nconst { live: styleLive, cover: styleCover } = components\n\nexport function LivePlayer() {\n   let { data } = useQuery(GET_LIVE)\n   const context = useContext(PlayerContext)\n\n   const pauseState = useState(context.paused)\n\n   if (!data) {\n      data = {\n         live: {\n            url: '',\n            statusUrl: '',\n            cover: '',\n            content: {\n               cover: null,\n               name: 'Rádio UFRJ',\n               clock: '-',\n               singer: '-',\n               music: '-',\n               author: '-'\n            }\n         }\n      }\n   }\n\n   const { content, cover, url, statusUrl } = data.live\n\n   return (\n      <article className={styleLive.container}>\n         <div className={`${styleLive.current} ${shadow.up}`}>\n            <header className={styleLive.header}>\n               <span className={styleLive.name}>\n                  <h1 className={styleLive.title}>Ao Vivo</h1>\n                  <AnimatedLiveIcon\n                     className={styleLive.icon}\n                     state={pauseState}\n                  />\n               </span>\n            </header>\n            <Content\n               statusUrl={statusUrl}\n               content={content}\n               cover={cover}\n               url={url}\n               context={context}\n               state={pauseState}\n            />\n         </div>\n         <footer></footer>\n      </article>\n   )\n}\n\nfunction Content({ statusUrl, content, cover, url, context, state }) {\n   const [status, setStatus] = useState({})\n\n   useEffect(() => {\n      if (!statusUrl) return\n      const id = setInterval(() => {\n         fetch(statusUrl)\n            .then(res => res.json())\n            .then(({ currentTrack }) => {\n               const [music, singer] = currentTrack.split(' - ')\n               setStatus({\n                  music,\n                  singer\n               })\n            })\n      }, 2000)\n      return () => {\n         clearInterval(id)\n      }\n   }, [context, setStatus, statusUrl])\n\n   const realCover = status.cover || content.cover || cover\n\n   return (\n      <Fragment>\n         <section className={styleLive.info}>\n            <Cover\n               cover={realCover}\n               url={url}\n               context={context}\n               state={state}\n               styleClass={components.live.btnToggle}\n               isLive={true}\n            />\n            <section className={styleLive.text}>\n               <footer>\n                  <p className={icons.music_note}>\n                     {status.music || content.music}\n                  </p>\n                  <p className={icons.singer}>\n                     {status.singer || content.singer}\n                  </p>\n               </footer>\n            </section>\n         </section>\n         <img className={styleCover.bgClean} src={srcBg} alt=\"Capa\" />\n      </Fragment>\n   )\n}\n\nexport default LivePlayer\n"]},"metadata":{},"sourceType":"module"}