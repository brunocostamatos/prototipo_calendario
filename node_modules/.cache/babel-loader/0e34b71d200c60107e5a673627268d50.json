{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from \"react\";\nimport GetSpreaker from \"../src/getSpreaker.js\";\nimport GetEpisode from \"../src/getEpisode.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [podcast, setPodcast] = useState([]);\n  const [dados, setDados] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [listaProgramas, setListaProgramas] = useState([]);\n  const [programaNoticia, setProgramaNoticia] = useState([]);\n  const [listaEpisodios, setListaEpisodios] = useState([]);\n  const [listaNoticias, setListaNoticias] = useState([]);\n  useEffect(() => {\n    GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia);\n    GetEpisode(4119263, setListaNoticias, 0);\n  }, []);\n\n  function getImages() {\n    let content = [];\n\n    for (let el in listaProgramas) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => GetEpisode(listaProgramas[el].show_id, 0, setListaEpisodios),\n        alt: \"Avatar\",\n        src: listaProgramas[el].image_url,\n        width: 176,\n        height: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this));\n    }\n\n    if (programaNoticia[0] != undefined) {\n      for (let el in listaProgramas) {\n        console.log(listaProgramas[el]);\n      }\n    }\n\n    if (programaNoticia[0] != undefined) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: programaNoticia[0].image_url,\n        width: 176,\n        height: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this));\n    }\n\n    for (let el in listaNoticias) {\n      content.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [listaNoticias[el].titulo, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: listaNoticias[el].descricao\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log('teste'),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 149\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 158\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this));\n    }\n\n    return content;\n  }\n\n  if (listaNoticias !== [] && listaProgramas !== undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {},\n        src: \"fundo_broadcast.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", dados.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), dados.image_url !== undefined && getImages()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Main, \"Og+6YmQaJpr9rWXP44sXDv7K29w=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","useState","GetSpreaker","GetEpisode","Main","podcast","setPodcast","dados","setDados","userID","setUserID","listaProgramas","setListaProgramas","programaNoticia","setProgramaNoticia","listaEpisodios","setListaEpisodios","listaNoticias","setListaNoticias","getImages","content","el","push","show_id","image_url","undefined","console","log","titulo","descricao","fullname"],"mappings":";;;AAAA,SACEA,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,QAJF,QAKO,OALP;AAOA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACM,QAAD,EAAWF,UAAX,EAAuBM,iBAAvB,EAA0CE,kBAA1C,CAAX;AACAX,IAAAA,UAAU,CAAC,OAAD,EAAUe,gBAAV,EAA4B,CAA5B,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;;AAUA,WAASC,SAAT,GAAoB;AAElB,QAAIC,OAAO,GAAG,EAAd;;AAGA,SAAK,IAAIC,EAAT,IAAeV,cAAf,EAA8B;AAC5BS,MAAAA,OAAO,CAACE,IAAR,eAAa;AAAK,QAAA,OAAO,EAAE,MAAMnB,UAAU,CAACQ,cAAc,CAACU,EAAD,CAAd,CAAmBE,OAApB,EAA6B,CAA7B,EAA+BP,iBAA/B,CAA9B;AACb,QAAA,GAAG,EAAC,QADS;AACA,QAAA,GAAG,EAAEL,cAAc,CAACU,EAAD,CAAd,CAAmBG,SADxB;AACmC,QAAA,KAAK,EAAE,GAD1C;AAC+C,QAAA,MAAM,EAAE;AADvD;AAAA;AAAA;AAAA;AAAA,cAAb;AAED;;AAED,QAAGX,eAAe,CAAC,CAAD,CAAf,IAAqBY,SAAxB,EAAkC;AAChC,WAAK,IAAIJ,EAAT,IAAeV,cAAf,EAA8B;AAC5Be,QAAAA,OAAO,CAACC,GAAR,CAAYhB,cAAc,CAACU,EAAD,CAA1B;AACD;AACF;;AAED,QAAGR,eAAe,CAAC,CAAD,CAAf,IAAqBY,SAAxB,EAAkC;AAChCL,MAAAA,OAAO,CAACE,IAAR,eAAa;AACb,QAAA,GAAG,EAAC,QADS;AACA,QAAA,GAAG,EAAET,eAAe,CAAC,CAAD,CAAf,CAAmBW,SADxB;AACmC,QAAA,KAAK,EAAE,GAD1C;AAC+C,QAAA,MAAM,EAAE;AADvD;AAAA;AAAA;AAAA;AAAA,cAAb;AAED;;AAED,SAAI,IAAIH,EAAR,IAAcJ,aAAd,EAA4B;AAC1BG,MAAAA,OAAO,CAACE,IAAR,eAAa;AAAA,mBAAML,aAAa,CAACI,EAAD,CAAb,CAAkBO,MAAxB,eAA+B;AAAA,oBAAOX,aAAa,CAACI,EAAD,CAAb,CAAkBQ;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAA/B,eAAyE;AAAQ,UAAA,OAAO,EAAE,MAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzE,eAAiI;AAAA;AAAA;AAAA;AAAA,gBAAjI,eAA0I;AAAA;AAAA;AAAA;AAAA,gBAA1I;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AACD;;AACD,WAAOP,OAAP;AAGA;;AAGF,MAAIH,aAAa,KAAK,EAAlB,IAAwBN,cAAc,KAAKc,SAA/C,EAA2D;AACzD,wBACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE,EAAZ;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,wCAAqBlB,KAAK,CAACuB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKEvB,KAAK,CAACiB,SAAN,KAAoBC,SAApB,IACAN,SAAS,EANX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBC;AACJ;;GAnEQf,I;;KAAAA,I;AAqET,eAAeA,IAAf","sourcesContent":["import {\n  React,\n  Component,\n  useEffect,\n  useState\n} from \"react\";\n\nimport GetSpreaker from \"../src/getSpreaker.js\"\nimport GetEpisode from \"../src/getEpisode.js\"\n\n\n\n\nfunction Main() {\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [userID, setUserID] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n  const [programaNoticia, setProgramaNoticia] = useState([])\n  const [listaEpisodios, setListaEpisodios] = useState([])\n  const [listaNoticias, setListaNoticias] = useState([])\n\n  useEffect(() => {\n    GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia)\n    GetEpisode(4119263, setListaNoticias, 0)\n  }, []);\n\n\n  \n\n\n\n  function getImages(){\n\n    let content = []\n    \n\n    for (let el in listaProgramas){\n      content.push(<img onClick={() => GetEpisode(listaProgramas[el].show_id, 0,setListaEpisodios)}\n      alt=\"Avatar\" src={listaProgramas[el].image_url} width={176} height={180}/>)\n    }\n\n    if(programaNoticia[0]!= undefined){\n      for (let el in listaProgramas){\n        console.log(listaProgramas[el])\n      }\n    }\n    \n    if(programaNoticia[0]!= undefined){\n      content.push(<img \n      alt=\"Avatar\" src={programaNoticia[0].image_url} width={176} height={180}/>)\n    }\n  \n    for(let el in listaNoticias){\n      content.push(<div>{listaNoticias[el].titulo}<span>{listaNoticias[el].descricao}</span><button onClick={()=>console.log('teste')}>Play</button><br></br><br></br></div>)\n    }\n    return content\n\n    \n   }\n \n  \n  if (listaNoticias !== [] && listaProgramas !== undefined ) {\n    return (\n      <div>\n        <img style={{}} src=\"fundo_broadcast.png\"/>\n\n      \n        <p>Resultados para: {dados.fullname}</p>\n       {dados.image_url !== undefined &&(\n        getImages()\n        \n       )}\n       \n       \n\n      </div>\n    )\n   \n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}