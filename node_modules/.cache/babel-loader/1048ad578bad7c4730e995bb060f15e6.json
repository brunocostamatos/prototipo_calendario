{"ast":null,"code":"function GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia) {\n  let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n  var lista_programas = [];\n  var programa_noticia = [];\n  fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(dados => {\n    setDados(dados.response.user);\n    return dados;\n  }).then(dados => {\n    if (dados.response.user.user_id != undefined) {\n      fetch(`https://api.spreaker.com/v2/users/` + dados.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n        setPodcast(podcasts.response.items);\n        return podcasts;\n      }).then(podcasts => {\n        let tamanho = podcasts.response.items.length;\n\n        for (var i = 0; i < tamanho; i++) {\n          if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n            fetch(`https://api.spreaker.com/v2/shows/` + podcasts.response.items[i].show_id).then(response => response.json()).then(programas => {\n              console.log(programas.response.show.description);\n            });\n\n            if (podcasts.response.items[i].last_episode_at != null) {\n              lista_programas.push({\n                show_id: podcasts.response.items[i].show_id,\n                title: podcasts.response.items[i].title,\n                datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                last_episode_at: podcasts.response.items[i].last_episode_at,\n                image_url: podcasts.response.items[i].image_url\n              });\n            }\n          } else {\n            programa_noticia.push({\n              show_id: podcasts.response.items[i].show_id,\n              title: podcasts.response.items[i].title,\n              image_url: podcasts.response.items[i].image_url\n            });\n          }\n        }\n\n        setProgramaNoticia(programa_noticia);\n        setListaProgramas(lista_programas);\n      });\n    }\n  });\n}\n\n_c = GetSpreaker;\nexport default GetSpreaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetSpreaker\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/getSpreaker.js"],"names":["GetSpreaker","setDados","setPodcast","setListaProgramas","setProgramaNoticia","chave_acesso","lista_programas","programa_noticia","fetch","then","response","json","dados","user","user_id","undefined","podcasts","items","tamanho","length","i","title","show_id","programas","console","log","show","description","last_episode_at","push","datacao_filtrada","Date","split","image_url"],"mappings":"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","sourcesContent":["function GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia) {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    var lista_programas = [];\n    var programa_noticia = [];\n\n    fetch(\n            `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso\n        )\n        .then((response) => response.json())\n        .then((dados) => {\n            setDados(dados.response.user)\n\n            return dados;\n        })\n        .then((dados) => {\n            if (dados.response.user.user_id != undefined) {\n                fetch(\n                        `https://api.spreaker.com/v2/users/` +\n                        dados.response.user.user_id +\n                        `/shows`\n                    )\n                    .then((response) => response.json())\n                    .then((podcasts) => {\n                        setPodcast(podcasts.response.items)\n                        \n                        return podcasts;\n                    })\n                    .then((podcasts) => {\n                        let tamanho = podcasts.response.items.length;\n                        \n                        for (var i = 0; i < tamanho; i++) {\n                            if (\n                                podcasts.response.items[i].title !=\n                                \"Rádio UFRJ - Informação & Conhecimento\"\n                            ) {\n                                fetch(`https://api.spreaker.com/v2/shows/` + podcasts.response.items[i].show_id)\n                                .then((response) => response.json())\n                                .then((programas)=>{\n                                    console.log(programas.response.show.description)\n                                })\n                                if (podcasts.response.items[i].last_episode_at != null) {\n                                    lista_programas.push({\n                                        show_id: podcasts.response.items[i].show_id,\n                                        title: podcasts.response.items[i].title,\n                                        datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                                        last_episode_at: podcasts.response.items[i].last_episode_at,\n                                        image_url: podcasts.response.items[i].image_url,\n                                       \n                                    });\n                                }\n                            }  \n                            else{\n                                programa_noticia.push({\n                                    show_id: podcasts.response.items[i].show_id,    \n                                    title: podcasts.response.items[i].title,\n                                    image_url: podcasts.response.items[i].image_url\n                                })\n                            }\n                        }\n                        \n                        setProgramaNoticia(programa_noticia)\n                        setListaProgramas(lista_programas)\n                       \n                    });\n            }  \n        })\n}\n\nexport default GetSpreaker"]},"metadata":{},"sourceType":"module"}