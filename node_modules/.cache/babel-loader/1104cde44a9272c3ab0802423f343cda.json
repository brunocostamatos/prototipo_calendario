{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [podcast, setPodcast] = useState([]);\n  const [dados, setDados] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [listaProgramas, setListaProgramas] = useState([]);\n  useEffect(() => {}, []);\n\n  function search() {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    setTimeout(function () {\n      fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(data => {\n        setDados(data.response.user);\n        /* this.setState({\n          data: data.response.user,\n        }); */\n\n        return data;\n      }).then(data => {\n        if (data.response.user.user_id != undefined) {\n          fetch(`https://api.spreaker.com/v2/users/` + data.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n            setPodcast(podcasts.response.items);\n            this.setState({\n              podcasts: podcasts.response.items\n            });\n            return podcasts;\n          }).then(podcasts => {\n            let tamanho = podcasts.response.items.length;\n            var lista_programas = [];\n\n            for (var i = 0; i < tamanho; i++) {\n              if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n                if (podcasts.response.items[i].last_episode_at != null) {\n                  lista_programas.push({\n                    show_id: podcasts.response.items[i].show_id,\n                    title: podcasts.response.items[i].title,\n                    datacao: podcasts.response.items[i].last_episode_at,\n                    image_url: podcasts.response.items[i].image_url\n                  });\n                }\n              }\n            }\n\n            this.setState({\n              lista_programas: lista_programas\n            });\n            console.log(lista_programas);\n          });\n        }\n      });\n      console.log(this.state);\n    }, 200);\n  }\n\n  if (dados) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n    /*{ <div>\n      <button onClick={this.search}>Search</button>\n       {this.data && <p>Resultados para: {this.data.fullname}</p>}\n       <img alt=\"Avatar\" src={this.data.image_url} width={50} />\n    </div> }*/\n    ;\n  }\n}\n\n_s(Main, \"QA9gr8W25mdHY3orCEcWH+1RrQ8=\");\n\n_c = Main;\nexport default Main;\n/*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","useState","Main","podcast","setPodcast","dados","setDados","userID","setUserID","listaProgramas","setListaProgramas","search","chave_acesso","setTimeout","fetch","then","response","json","data","user","user_id","undefined","podcasts","items","setState","tamanho","length","lista_programas","i","title","last_episode_at","push","show_id","datacao","image_url","console","log","state"],"mappings":"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","sourcesContent":["import { React, Component, useEffect, useState } from \"react\";\n\nfunction Main(){\n\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [userID, setUserID] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n \n  useEffect(() => {\n  }, []);\n\n \n  function search(){\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    setTimeout(function () {\n      fetch(\n        `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setDados(data.response.user)\n          /* this.setState({\n            data: data.response.user,\n          }); */\n          return data;\n        })\n\n        .then((data) => {\n          if (data.response.user.user_id != undefined) {\n            fetch(\n              `https://api.spreaker.com/v2/users/` +\n                data.response.user.user_id +\n                `/shows`\n            )\n              .then((response) => response.json())\n              .then((podcasts) => {\n                setPodcast(podcasts.response.items)\n                this.setState({\n                  podcasts: podcasts.response.items,\n                });\n                return podcasts;\n              })\n              .then((podcasts) => {\n                let tamanho = podcasts.response.items.length;\n                var lista_programas = [];\n                for (var i = 0; i < tamanho; i++) {\n                  if (\n                    podcasts.response.items[i].title !=\n                    \"Rádio UFRJ - Informação & Conhecimento\"\n                  ) {\n                    if (podcasts.response.items[i].last_episode_at != null) {\n                      lista_programas.push({\n                        show_id: podcasts.response.items[i].show_id,\n                        title: podcasts.response.items[i].title,\n                        datacao: podcasts.response.items[i].last_episode_at,\n                        image_url: podcasts.response.items[i].image_url,\n                      });\n                    }\n                  }\n                }\n                this.setState({\n                  lista_programas: lista_programas,\n                });\n                console.log(lista_programas);\n              });\n          }\n        });\n\n      console.log(this.state);\n    }, 200);\n\n    \n  }\n\n  \n    if(dados){return (\n      <h1>Teste</h1>\n      /*{ <div>\n        <button onClick={this.search}>Search</button>\n\n        {this.data && <p>Resultados para: {this.data.fullname}</p>}\n\n        <img alt=\"Avatar\" src={this.data.image_url} width={50} />\n      </div> }*/\n    )}\n}\n\n\nexport default Main;\n\n/*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/"]},"metadata":{},"sourceType":"module"}