{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user_id: [],\n      data: [],\n      podcasts: {}\n    };\n\n    this.search = event => {\n      var _s = $RefreshSig$();\n\n      let chave_acesso = '20e75b947a1909b99b242724438ed46dad9576b1';\n      setTimeout(() => {\n        const {\n          data\n        } = this.state;\n        let user_id = data.user_id;\n        fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(data => {\n          this.setState({\n            data: data.response.user\n          });\n        });\n      }, 200);\n      setTimeout(_s(() => {\n        _s();\n\n        const {\n          data,\n          podcasts\n        } = this.state;\n        let user_id = data.user_id;\n        const [Num_prog, setNum_prog] = useState({\n          progama: '',\n          data: ''\n        });\n        console.log(\"id=\" + user_id);\n\n        if (user_id != undefined) {\n          fetch(`https://api.spreaker.com/v2/users/` + user_id + `/shows`).then(res => {\n            console.log('Resposta da API:', res);\n            console.log('programa:', res.item);\n            let nomeprograma = res.item;\n            setNum_prog({\n              programa: nomeprograma.item,\n              data: nomeprograma.item.last_episode_at\n            });\n          });\n        }\n      }, \"FskOaPsbprb9vea1V4h0K+WhS2Y=\"), 200);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      podcasts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.search,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", data.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: data.image_url,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","useState","Search","state","user_id","data","podcasts","search","event","chave_acesso","setTimeout","fetch","then","response","json","setState","user","Num_prog","setNum_prog","progama","console","log","undefined","res","item","nomeprograma","programa","last_episode_at","render","fullname","image_url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE7BI,KAF6B,GAErB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAFqB;;AAAA,SAsB7BC,MAtB6B,GAsBpBC,KAAK,IAAI;AAAA;;AAChB,UAAIC,YAAY,GAAG,0CAAnB;AAGAC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAK;AAACL,UAAAA;AAAD,YAAS,KAAKF,KAAnB;AACA,YAAIC,OAAO,GAAGC,IAAI,CAACD,OAAnB;AAEAO,QAAAA,KAAK,CAAE,qDAAD,GAAuDF,YAAxD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQP,IAAI,IAAI;AACZ,eAAKU,QAAL,CAAc;AACZV,YAAAA,IAAI,EAAEA,IAAI,CAACQ,QAAL,CAAcG;AADR,WAAd;AAID,SAPH;AASC,OAbO,EAaL,GAbK,CAAV;AAeAN,MAAAA,UAAU,IAAC,MAAI;AAAA;;AACb,cAAK;AAACL,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAmB,KAAKH,KAA7B;AACA,YAAIC,OAAO,GAAGC,IAAI,CAACD,OAAnB;AACA,cAAM,CAACa,QAAD,EAAWC,WAAX,IAAwBjB,QAAQ,CAAC;AACrCkB,UAAAA,OAAO,EAAE,EAD4B;AAErCd,UAAAA,IAAI,EAAE;AAF+B,SAAD,CAAtC;AAKAe,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAMjB,OAAlB;;AACA,YAAGA,OAAO,IAAIkB,SAAd,EAAwB;AACtBX,UAAAA,KAAK,CAAE,oCAAD,GAAsCP,OAAtC,GAAgD,QAAjD,CAAL,CACGQ,IADH,CACQW,GAAG,IAAI;AACXH,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,GAAhC;AACAH,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,GAAG,CAACC,IAA7B;AACA,gBAAIC,YAAY,GAAGF,GAAG,CAACC,IAAvB;AACAN,YAAAA,WAAW,CAAC;AAACQ,cAAAA,QAAQ,EAACD,YAAY,CAACD,IAAvB;AAA6BnB,cAAAA,IAAI,EAACoB,YAAY,CAACD,IAAb,CAAkBG;AAApD,aAAD,CAAX;AACD,WANH;AAOD;AAIF,OArBS,mCAqBP,GArBO,CAAV;AAsBD,KA/D4B;AAAA;;AAkE7BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACvB,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAmB,KAAKH,KAA9B;AAIA,wBACE;AAAA,8BAEE;AAAQ,QAAA,OAAO,EAAE,KAAKI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKGF,IAAI,iBAAI;AAAA,wCAAqBA,IAAI,CAACwB,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cALX,eAME;AAAK,QAAA,GAAG,EAAC,QAAT;AAAkB,QAAA,GAAG,EAAExB,IAAI,CAACyB,SAA5B;AAAuC,QAAA,KAAK,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApF4B;;AAuF/B,eAAe5B,MAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\n\nclass Search extends Component {\n  \n  state = {\n    user_id: [],\n    data: [],\n    podcasts: {}\n  }\n  \n  /*constructor(props) {\n    super(props);\n    this.handleAuthorChange = this.handleAuthorChange.bind(this);\n  } \n\n  handleAuthorChange(event) {\n    let {name: fieldName, value} = event.target;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };*/\n\n\n  search = event => {\n    let chave_acesso = '20e75b947a1909b99b242724438ed46dad9576b1'\n    \n    \n    setTimeout(() => {\n      const{data} = this.state\n      let user_id = data.user_id\n\n      fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=`+ chave_acesso)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            data: data.response.user\n          })\n         \n        }) \n      \n      }, 200)\n\n    setTimeout(()=>{\n      const{data, podcasts} = this.state\n      let user_id = data.user_id\n      const [Num_prog, setNum_prog]=useState({\n        progama: '',\n        data: ''\n      })\n\n      console.log(\"id=\"+user_id)\n      if(user_id != undefined){\n        fetch(`https://api.spreaker.com/v2/users/`+ user_id+ `/shows`)\n          .then(res => {\n            console.log('Resposta da API:', res)\n            console.log('programa:', res.item)\n            let nomeprograma = res.item;\n            setNum_prog({programa:nomeprograma.item, data:nomeprograma.item.last_episode_at})\n          })   \n      }\n      \n      \n\n    }, 200)\n  }\n\n  \n  render() {\n    const {data, podcasts} = this.state\n\n\n   \n    return (\n      <div>\n        \n        <button onClick={this.search} >Search</button>\n\n\n        {data && <p>Resultados para: {data.fullname}</p>}\n        <img alt=\"Avatar\" src={data.image_url} width={50} />\n\n\n\n      </div>\n    )\n  }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}