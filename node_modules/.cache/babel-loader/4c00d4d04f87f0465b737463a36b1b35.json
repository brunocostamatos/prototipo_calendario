{"ast":null,"code":"function GetEpisode(PodcastID, setPodcast, setListaNoticias, setListaEpisodios) {\n  fetch(`https://api.spreaker.com/v2/shows/` + PodcastID + `/episodes?limit=5` //ESTÁ LIMITANDO PARA OS 5 PRIMEIROS EPISODIOS\n  ).then(response => response.text()).then(text => text.length ? JSON.parse(text) : {}).catch(error => {\n    throw error;\n  }).then(episodes => {\n    return episodes;\n  }).then(episodes => {\n    if (episodes.response.items[0].show_id != '4119263') {\n      let quantidade_episodios = episodes.response.items.length;\n      var lista_episodio = [];\n\n      for (var i = 0; i < quantidade_episodios; i++) {\n        fetch(`https://api.spreaker.com/v2/episodes/` + episodes.response.items[i].episode_id).then(response => response.json()).then(episodio => {\n          lista_episodio.push(episodio.response.episode);\n        });\n      }\n\n      setListaEpisodios(lista_episodio);\n      console.log(lista_episodio);\n    } else {\n      var lista_noticias = [];\n\n      for (var i = 0; i < episodes.response.items.length; i++) {\n        fetch(`https://api.spreaker.com/v2/episodes/` + episodes.response.items[i].episode_id).then(response => response.text()).then(text => text.length ? JSON.parse(text) : {}).catch(error => {\n          throw error;\n        }).then(episodio => {\n          lista_noticias.push({\n            episodio_id: episodio.response.episode.episode_id,\n            descricao: episodio.response.episode.description,\n            audio: episodio.response.episode.playback_url,\n            titulo: episodio.response.episode.title\n          });\n        });\n      }\n\n      setListaNoticias(lista_noticias);\n    }\n  });\n  fetch(`https://api.spreaker.com/v2/shows/` + PodcastID).then(response => response.text()).then(text => text.length ? JSON.parse(text) : {}).catch(error => {\n    throw error;\n  }).then(podcast => {\n    setPodcast(podcast.response.show);\n    console.log(podcast.response.show);\n  });\n}\n\n_c = GetEpisode;\nexport default GetEpisode;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetEpisode\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/descricao_funcional/src/getEpisode.js"],"names":["GetEpisode","PodcastID","setPodcast","setListaNoticias","setListaEpisodios","fetch","then","response","text","length","JSON","parse","catch","error","episodes","items","show_id","quantidade_episodios","lista_episodio","i","episode_id","json","episodio","push","episode","console","log","lista_noticias","episodio_id","descricao","description","audio","playback_url","titulo","title","podcast","show"],"mappings":"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","sourcesContent":["function GetEpisode(PodcastID, setPodcast, setListaNoticias, setListaEpisodios){\n    \n    fetch(`https://api.spreaker.com/v2/shows/` +\n                        PodcastID +\n                        `/episodes?limit=5` //ESTÁ LIMITANDO PARA OS 5 PRIMEIROS EPISODIOS\n    )\n    .then((response) => response.text())\n        .then((text)=> text.length ? JSON.parse(text):{})\n        .catch((error)=>{\n            throw error;\n        })\n    .then((episodes) => {\n        return episodes;\n    })\n    .then((episodes)=>{\n        \n        \n        if(episodes.response.items[0].show_id != '4119263'){\n          \n            let quantidade_episodios = episodes.response.items.length\n            var lista_episodio=[];\n          \n            for(var i=0; i < quantidade_episodios; i++){\n\n                fetch(`https://api.spreaker.com/v2/episodes/`+episodes.response.items[i].episode_id)\n                    .then((response)=>response.json())\n                    .then((episodio)=>{\n                        \n                        lista_episodio.push(episodio.response.episode)\n                    })\n\n              }\n\n\n            setListaEpisodios(lista_episodio)\n            console.log(lista_episodio)\n        }  \n        else{\n            var lista_noticias=[];\n            for(var i=0; i < episodes.response.items.length; i++){\n                \n                fetch(`https://api.spreaker.com/v2/episodes/`+episodes.response.items[i].episode_id)\n                .then((response) => response.text())\n                .then((text)=> text.length ? JSON.parse(text):{})\n                .catch((error)=>{\n                    throw error;\n                })\n                    .then((episodio)=>{\n                        lista_noticias.push({\n                            episodio_id: episodio.response.episode.episode_id,\n                            descricao: episodio.response.episode.description,\n                            audio: episodio.response.episode.playback_url,\n                            titulo: episodio.response.episode.title\n                        })\n                    })\n              }\n            \n            setListaNoticias(lista_noticias)\n          }\n        \n    })\n\n    fetch(`https://api.spreaker.com/v2/shows/`+PodcastID)\n    .then((response) => response.text())\n        .then((text)=> text.length ? JSON.parse(text):{})\n        .catch((error)=>{\n            throw error;\n        })\n    .then((podcast)=>{\n        setPodcast(podcast.response.show)\n        console.log(podcast.response.show)\n        \n    })\n \n}\nexport default GetEpisode\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}