{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\";\nimport React, { Component, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user_id: [],\n      data: [],\n      podcasts: [],\n      listas_programas: []\n    };\n\n    this.search = event => {\n      let chave_acesso = '20e75b947a1909b99b242724438ed46dad9576b1';\n      fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(data => {\n        this.setState({\n          data: data.response.user\n        });\n        return data;\n      }).then(data => {\n        if (data.response.user.user_id != undefined) {\n          fetch(`https://api.spreaker.com/v2/users/` + data.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n            this.setState({\n              podcasts: podcasts.response.items\n            });\n            return podcasts;\n          }).then(podcasts => {\n            let tamanho = podcasts.response.items.length;\n            var lista_programas = [];\n\n            for (var i = 0; i < tamanho; i++) {\n              if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n                if (podcasts.response.items[i].last_episode_at != null) {\n                  lista_programas.push({\n                    show_id: podcasts.response.items[i].show_id,\n                    title: podcasts.response.items[i].title,\n                    datacao: podcasts.response.items[i].last_episode_at,\n                    image_url: podcasts.response.items[i].image_url\n                  });\n                }\n              }\n            }\n\n            this.setState({\n              lista_programas: lista_programas\n            });\n            console.log(lista_programas);\n          });\n        }\n      });\n      console.log(this.lista_programas);\n      /*    let user_id = data.user_id\n          \n          \n          \n        /*console.log(podcasts)  \n        console.log(podcasts[0])\n         let tamanho = podcasts.length\n         var lista_programas = [];\n        for (var i = 0; i < tamanho; i++) {\n           if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n            if(podcasts[i].last_episode_at != null){\n              lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n            }\n          }\n        }\n        console.log(lista_programas)\n        tamanho = lista_programas.length\n        \n        \n      \n         return <div>{lista_programas}</div>;\n      */\n    };\n  }\n\n  render() {\n    const {\n      data,\n      podcasts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.search,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", data.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: data.image_url,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","Search","state","user_id","data","podcasts","listas_programas","search","event","chave_acesso","fetch","then","response","json","setState","user","undefined","items","tamanho","length","lista_programas","i","title","last_episode_at","push","show_id","datacao","image_url","console","log","render","fullname"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from 'react'\n\nclass Search extends Component {\n  \n  state = {\n    user_id: [],\n    data: [],\n    podcasts: [],\n    listas_programas: []\n  }\n  \n  /*constructor(props) {\n    super(props);\n    this.handleAuthorChange = this.handleAuthorChange.bind(this);\n  } \n\n  handleAuthorChange(event) {\n    let {name: fieldName, value} = event.target;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };*/\n\n\n  search = event => {\n    let chave_acesso = '20e75b947a1909b99b242724438ed46dad9576b1'\n    \n    \n    \n      fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=`+ chave_acesso)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            data: data.response.user\n          })\n         return data\n        })\n        \n        .then(data=>{\n          if(data.response.user.user_id != undefined){\n            fetch(`https://api.spreaker.com/v2/users/`+ data.response.user.user_id+ `/shows`)\n              .then(response => response.json())\n              .then(podcasts =>{\n                this.setState({\n                  podcasts: podcasts.response.items\n                })\n                return podcasts\n              })\n              .then(podcasts=>{\n                let tamanho = podcasts.response.items.length\n                var lista_programas = [];\n                for (var i = 0; i < tamanho; i++) {\n                  if(podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n                    if(podcasts.response.items[i].last_episode_at != null){\n                      lista_programas.push({show_id: podcasts.response.items[i].show_id, title: podcasts.response.items[i].title, datacao: podcasts.response.items[i].last_episode_at, image_url: podcasts.response.items[i].image_url});\n                    }\n                  }\n                }\n                this.setState({\n                  lista_programas: lista_programas\n                })\n              console.log(lista_programas)\n              })\n          }\n\n        })\n         \n      \n      console.log(this.lista_programas)\n\n    \n\n  /*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/\n    \n    \n    \n  }\n  \n  \n  \n\n\n\n\n\n  render() {\n    const {data, podcasts} = this.state\n\n\n   \n    return (\n      <div>\n        \n        <button onClick={this.search} >Search</button>\n\n\n        {data && <p>Resultados para: {data.fullname}</p>}\n     \n        <img alt=\"Avatar\" src={data.image_url} width={50} />\n\n      \n\n      </div>\n    )\n  }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}