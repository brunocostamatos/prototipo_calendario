{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\";\nimport { React, Component, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction main() {\n  let state = {\n    user_id: [],\n    data: [],\n    podcasts: [],\n    lista_programas: []\n  };\n\n  function search() {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    setTimeout(function () {\n      fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(data => {\n        this.setState({\n          data: data.response.user\n        });\n        return data;\n      }).then(data => {\n        if (data.response.user.user_id != undefined) {\n          fetch(`https://api.spreaker.com/v2/users/` + data.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n            this.setState({\n              podcasts: podcasts.response.items\n            });\n            return podcasts;\n          }).then(podcasts => {\n            let tamanho = podcasts.response.items.length;\n            var lista_programas = [];\n\n            for (var i = 0; i < tamanho; i++) {\n              if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n                if (podcasts.response.items[i].last_episode_at != null) {\n                  lista_programas.push({\n                    show_id: podcasts.response.items[i].show_id,\n                    title: podcasts.response.items[i].title,\n                    datacao: podcasts.response.items[i].last_episode_at,\n                    image_url: podcasts.response.items[i].image_url\n                  });\n                }\n              }\n            }\n\n            this.setState({\n              lista_programas: lista_programas\n            });\n            console.log(lista_programas);\n          });\n        }\n      });\n      console.log(this.state);\n    }, 200);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.search,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Resultados para: \", this.data.fullname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Avatar\",\n      src: this.data.image_url,\n      width: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n}\n\nexport default main;\n/*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","main","state","user_id","data","podcasts","lista_programas","search","chave_acesso","setTimeout","fetch","then","response","json","setState","user","undefined","items","tamanho","length","i","title","last_episode_at","push","show_id","datacao","image_url","console","log","fullname"],"mappings":"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","sourcesContent":["import { React, Component, useEffect } from \"react\";\n\nfunction main(){\n  let state = {\n    user_id: [],\n    data: [],\n    podcasts: [],\n    lista_programas: [],\n  };\n\n  function search(){\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    setTimeout(function () {\n      fetch(\n        `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({\n            data: data.response.user,\n          });\n          return data;\n        })\n\n        .then((data) => {\n          if (data.response.user.user_id != undefined) {\n            fetch(\n              `https://api.spreaker.com/v2/users/` +\n                data.response.user.user_id +\n                `/shows`\n            )\n              .then((response) => response.json())\n              .then((podcasts) => {\n                this.setState({\n                  podcasts: podcasts.response.items,\n                });\n                return podcasts;\n              })\n              .then((podcasts) => {\n                let tamanho = podcasts.response.items.length;\n                var lista_programas = [];\n                for (var i = 0; i < tamanho; i++) {\n                  if (\n                    podcasts.response.items[i].title !=\n                    \"Rádio UFRJ - Informação & Conhecimento\"\n                  ) {\n                    if (podcasts.response.items[i].last_episode_at != null) {\n                      lista_programas.push({\n                        show_id: podcasts.response.items[i].show_id,\n                        title: podcasts.response.items[i].title,\n                        datacao: podcasts.response.items[i].last_episode_at,\n                        image_url: podcasts.response.items[i].image_url,\n                      });\n                    }\n                  }\n                }\n                this.setState({\n                  lista_programas: lista_programas,\n                });\n                console.log(lista_programas);\n              });\n          }\n        });\n\n      console.log(this.state);\n    }, 200);\n\n    \n  }\n\n  \n    return (\n      <div>\n        <button onClick={this.search}>Search</button>\n\n        {data && <p>Resultados para: {this.data.fullname}</p>}\n\n        <img alt=\"Avatar\" src={this.data.image_url} width={50} />\n      </div>\n    )\n}\n\n\nexport default main;\n\n/*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/"]},"metadata":{},"sourceType":"module"}