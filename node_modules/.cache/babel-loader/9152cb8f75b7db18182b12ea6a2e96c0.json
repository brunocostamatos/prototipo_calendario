{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from \"react\";\nimport GetSpreaker from \"../src/getSpreaker.js\";\nimport GetEpisode from \"../src/getEpisode.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [podcast, setPodcast] = useState([]);\n  const [dados, setDados] = useState([]);\n  const [listaEpisodiosDescricao, setListaEpisodiosDescricao] = useState([]);\n  const [listaProgramas, setListaProgramas] = useState([]);\n  const [programaNoticia, setProgramaNoticia] = useState([]);\n  const [listaEpisodios, setListaEpisodios] = useState([]);\n  const [listaNoticias, setListaNoticias] = useState([]);\n  useEffect(() => {\n    GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia);\n    GetEpisode(4119263, setListaEpisodios, setListaEpisodiosDescricao);\n  }, []);\n\n  function cria_player(lista_noticias) {\n    lista_noticias = lista_noticias;\n    const iframe = document.createElement('iframe');\n    const html = \"https://widget.spreaker.com/player?episode_id=\" + lista_noticias.episode_id + \"&hide-logo=true\";\n    /*No link https://developers.spreaker.com/guides/embedding-the-player/ ele mostra as opções que existem no player, como mudaça para o tema dark, autoplay e \n    coisas do genero. Para implementar tais opções, só é necessario adicionar após a variável de ID do episodio ou do show um &... \n    Como está acima, &theme=dark ativa o tema dark, se fosse uma opção como hide-logo seria &hide-logo=true. */\n\n    iframe.src = html;\n    iframe.sandbox = 'allow-scripts allow-popups';\n    iframe.width = \"50%\";\n    iframe.height = \"100px\";\n    iframe.frameborder = \"0\";\n    document.body.appendChild(iframe);\n  }\n\n  function getImages() {\n    let content = [];\n\n    if (listaEpisodios[0] != undefined && listaEpisodiosDescricao[0] != undefined) {\n      console.log(listaEpisodios[0]);\n      console.log(listaEpisodiosDescricao);\n\n      for (var i = 0; i < listaEpisodios.length; i++) {\n        var u = 0;\n\n        if (listaEpisodios[i].episode_id == listaEpisodiosDescricao[u].episode_id) {\n          listaEpisodios[i].push(listaEpisodiosDescricao[u].descricao_episodio);\n        } else {\n          u++;\n        }\n      }\n    }\n\n    for (let el in listaProgramas) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => GetEpisode(listaProgramas[el].show_id, 0, setListaEpisodios),\n        alt: \"Avatar\",\n        src: listaProgramas[el].image_url,\n        width: 176,\n        height: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this));\n    }\n\n    if (programaNoticia[0] != undefined) {\n      for (let el in listaProgramas) {\n        console.log(listaProgramas[el]);\n      }\n    }\n\n    if (programaNoticia[0] != undefined) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: programaNoticia[0].image_url,\n        width: 176,\n        height: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this));\n    }\n\n    for (let el in listaProgramas) {\n      console.log(listaNoticias);\n      content.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [listaEpisodios.items[el].title + \".\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cria_player(listaEpisodios.items[el]),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 148\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 157\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 20\n      }, this));\n    }\n\n    return content;\n  }\n\n  if (listaNoticias !== [] && listaProgramas !== undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {},\n        src: \"fundo_broadcast.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", dados.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), dados.image_url !== undefined && getImages()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Main, \"HrWotShfb6hazxh/yzCElV5oY4o=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","useState","GetSpreaker","GetEpisode","Main","podcast","setPodcast","dados","setDados","listaEpisodiosDescricao","setListaEpisodiosDescricao","listaProgramas","setListaProgramas","programaNoticia","setProgramaNoticia","listaEpisodios","setListaEpisodios","listaNoticias","setListaNoticias","cria_player","lista_noticias","iframe","document","createElement","html","episode_id","src","sandbox","width","height","frameborder","body","appendChild","getImages","content","undefined","console","log","i","length","u","push","descricao_episodio","el","show_id","image_url","items","title","fullname"],"mappings":"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","sourcesContent":["import {\n  React,\n  Component,\n  useEffect,\n  useState\n} from \"react\";\n\nimport GetSpreaker from \"../src/getSpreaker.js\"\nimport GetEpisode from \"../src/getEpisode.js\"\n\n\n\n\n\nfunction Main() {\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [listaEpisodiosDescricao, setListaEpisodiosDescricao] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n  const [programaNoticia, setProgramaNoticia] = useState([])\n  const [listaEpisodios, setListaEpisodios] = useState([])\n  const [listaNoticias, setListaNoticias] = useState([])\n\n  useEffect(() => {\n    GetSpreaker(setDados, setPodcast, setListaProgramas, setProgramaNoticia)\n    GetEpisode(4119263, setListaEpisodios, setListaEpisodiosDescricao)\n    \n  }, []);\n\n\n\n  function cria_player(lista_noticias){\n    lista_noticias = lista_noticias\n    const iframe = document.createElement('iframe');\n    const html = \"https://widget.spreaker.com/player?episode_id=\"  + lista_noticias.episode_id + \"&hide-logo=true\"; \n    /*No link https://developers.spreaker.com/guides/embedding-the-player/ ele mostra as opções que existem no player, como mudaça para o tema dark, autoplay e \n    coisas do genero. Para implementar tais opções, só é necessario adicionar após a variável de ID do episodio ou do show um &... \n    Como está acima, &theme=dark ativa o tema dark, se fosse uma opção como hide-logo seria &hide-logo=true. */ \n    iframe.src = html;\n    iframe.sandbox = 'allow-scripts allow-popups';\n    iframe.width = \"50%\";\n    iframe.height=\"100px\";\n    iframe.frameborder=\"0\";\n    document.body.appendChild(iframe);\n  }\n\n  \n\n\n  function getImages(){\n  \n    let content = []\n    \n  \n\n    if(listaEpisodios[0] != undefined && listaEpisodiosDescricao[0] != undefined){\n      console.log(listaEpisodios[0])\n      console.log(listaEpisodiosDescricao)\n\n      for(var i = 0; i < listaEpisodios.length; i++){\n        var u = 0\n        if(listaEpisodios[i].episode_id == listaEpisodiosDescricao[u].episode_id){\n          listaEpisodios[i].push(listaEpisodiosDescricao[u].descricao_episodio)\n        }\n        else{\n          u++;\n        }\n      }\n    }\n\n\n\n    for (let el in listaProgramas){\n      content.push(<img onClick={() => GetEpisode(listaProgramas[el].show_id, 0,setListaEpisodios)}\n      alt=\"Avatar\" src={listaProgramas[el].image_url} width={176} height={180}/>)\n    }\n\n    if(programaNoticia[0]!= undefined){\n      for (let el in listaProgramas){\n        console.log(listaProgramas[el])\n      }\n    }\n    \n    if(programaNoticia[0]!= undefined){\n      content.push(<img \n      alt=\"Avatar\" src={programaNoticia[0].image_url} width={176} height={180}/>)\n    }\n    \n    for(let el in listaProgramas){\n      console.log(listaNoticias)\n      content.push(<div>{listaEpisodios.items[el].title+ \".\"}<span></span><button onClick={()=>cria_player(listaEpisodios.items[el])}>Play</button><br></br><br></br></div>)\n    }\n    return content\n\n    \n   }\n \n  \n  if (listaNoticias !== [] && listaProgramas !== undefined ) {\n    return (\n      <div>\n        <img style={{}} src=\"fundo_broadcast.png\"/>\n\n      \n        <p>Resultados para: {dados.fullname}</p>\n       {dados.image_url !== undefined &&(\n        getImages()\n        \n       )}\n       \n       \n       \n      </div>\n    )\n   \n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}