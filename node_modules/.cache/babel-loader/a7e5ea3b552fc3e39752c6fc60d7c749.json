{"ast":null,"code":"function GetEpisode(PodcastID, setListaNoticias, setListaEpisodios) {\n  fetch(`https://api.spreaker.com/v2/shows/` + PodcastID + `/episodes?limit=5` //ESTÁ LIMITANDO PARA OS 5 PRIMEIROS EPISODIOS\n  ).then(response => response.json()).then(episodes => {\n    console.log(episodes);\n    return episodes;\n  });\n  /*.then((episodes)=>{\n      \n      \n      if(episodes.response.items[0].show_id != '4119263'){\n        \n          let quantidade_episodios = episodes.response.items.length\n          var lista_episodio=[];\n          for(var i=0; i < quantidade_episodios; i++){\n          \n              fetch(`https://api.spreaker.com/v2/episodes/`+episodes.response.items[i].episode_id)\n                  .then((response)=>response.json())\n                  .then((episodio)=>{\n                      \n                      lista_episodio.push(episodio.response.episode)\n                  })\n            }\n          setListaEpisodios(lista_episodio)\n          console.log(lista_episodio)\n          \n          \n      }  \n      else{\n          var lista_noticias=[];\n          for(var i=0; i < episodes.response.items.length; i++){\n              \n              fetch(`https://api.spreaker.com/v2/episodes/`+episodes.response.items[i].episode_id)\n                  .then((response)=>response.json())\n                  .then((episodio)=>{\n                      lista_noticias.push({\n                          episodio_id: episodio.response.episode.episode_id,\n                          descricao: episodio.response.episode.description,\n                          audio: episodio.response.episode.playback_url,\n                          titulo: episodio.response.episode.title\n                      })\n                  })\n            }\n          \n          setListaNoticias(lista_noticias)\n        }\n      \n  })*/\n}\n\n_c = GetEpisode;\nexport default GetEpisode;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetEpisode\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/teste_versao_direta/src/getEpisode.js"],"names":["GetEpisode","PodcastID","setListaNoticias","setListaEpisodios","fetch","then","response","json","episodes","console","log"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,SAApB,EAA+BC,gBAA/B,EAAiDC,iBAAjD,EAAmE;AAE/DC,EAAAA,KAAK,CAAE,oCAAD,GACcH,SADd,GAEe,mBAFhB,CAEmC;AAFnC,GAAL,CAICI,IAJD,CAIOC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EAJlB,EAKCF,IALD,CAKOG,QAAD,IAAc;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAP;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;;KAtDQR,U;AAuDT,eAAeA,UAAf","sourcesContent":["function GetEpisode(PodcastID, setListaNoticias, setListaEpisodios){\n    \n    fetch(`https://api.spreaker.com/v2/shows/` +\n                        PodcastID +\n                        `/episodes?limit=5` //ESTÁ LIMITANDO PARA OS 5 PRIMEIROS EPISODIOS\n    )\n    .then((response)=>response.json())\t\n    .then((episodes) => {\n        console.log(episodes)\n        return episodes;\n    })\n    /*.then((episodes)=>{\n        \n        \n        if(episodes.response.items[0].show_id != '4119263'){\n          \n            let quantidade_episodios = episodes.response.items.length\n            var lista_episodio=[];\n            for(var i=0; i < quantidade_episodios; i++){\n            \n                fetch(`https://api.spreaker.com/v2/episodes/`+episodes.response.items[i].episode_id)\n                    .then((response)=>response.json())\n                    .then((episodio)=>{\n                        \n                        lista_episodio.push(episodio.response.episode)\n                    })\n              }\n            setListaEpisodios(lista_episodio)\n            console.log(lista_episodio)\n            \n            \n        }  \n        else{\n            var lista_noticias=[];\n            for(var i=0; i < episodes.response.items.length; i++){\n                \n                fetch(`https://api.spreaker.com/v2/episodes/`+episodes.response.items[i].episode_id)\n                    .then((response)=>response.json())\n                    .then((episodio)=>{\n                        lista_noticias.push({\n                            episodio_id: episodio.response.episode.episode_id,\n                            descricao: episodio.response.episode.description,\n                            audio: episodio.response.episode.playback_url,\n                            titulo: episodio.response.episode.title\n                        })\n                    })\n              }\n            \n            setListaNoticias(lista_noticias)\n          }\n        \n    })*/\n\n \n}\nexport default GetEpisode\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}