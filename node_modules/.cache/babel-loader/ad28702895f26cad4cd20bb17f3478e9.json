{"ast":null,"code":"import _slicedToArray from\"/home/bruno/\\xC1rea de Trabalho/descricao_funcional/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,Component,useEffect,useState}from\"react\";import'bootstrap/dist/css/bootstrap.min.css';import GetSpreaker from\"./getSpreaker.js\";import GetEpisode from\"./getEpisode.js\";import GetDescription from\"./getDescription.js\";import MultiPlayer from\"./Multiplayer.js\";import Prismic from'@prismicio/client';import{Date,Link,RichText}from'prismic-reactjs';//import client from './prismic-configuration.js'\nimport GetPrismic from\"./getprismic.js\";import CalendarioDiario from\"./CalendarioDiario.js\";import{Container}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),podcast=_useState2[0],setPodcast=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),dados=_useState4[0],setDados=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),userID=_useState6[0],setUserID=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),listaProgramas=_useState8[0],setListaProgramas=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),programaNoticia=_useState10[0],setProgramaNoticia=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),listaEpisodios=_useState12[0],setListaEpisodios=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),listaNoticias=_useState14[0],setListaNoticias=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),descricaoEpisodio=_useState16[0],setDescricaoEpisodio=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),conteudoprismic=_useState18[0],setConteudoPrismic=_useState18[1];useEffect(function(){GetSpreaker(setDados,setListaProgramas,setProgramaNoticia);GetEpisode(4119263,setListaNoticias,0);GetPrismic(setConteudoPrismic);//GetPrismic(Client)\n//GetDescription(43826958, setDescricaoEpisodio) //Pegando a descrição de forma estática de um episodio em específico \n},[]);function cria_player(lista_ordenada_episodios){lista_ordenada_episodios=lista_ordenada_episodios;var iframe=document.createElement('iframe');var html=\"https://widget.spreaker.com/player?episode_id=\"+lista_ordenada_episodios.episodio_id+\"&hide-logo=true\";/*No link https://developers.spreaker.com/guides/embedding-the-player/ ele mostra as opções que existem no player, como mudaça para o tema dark, autoplay e \n    coisas do genero. Para implementar tais opções, só é necessario adicionar após a variável de ID do episodio ou do show um &... \n    Como está acima, &theme=dark ativa o tema dark, se fosse uma opção como hide-logo seria &hide-logo=true. */iframe.src=html;iframe.sandbox='allow-scripts allow-popups';iframe.width=\"50%\";iframe.height=\"100px\";iframe.frameborder=\"0\";document.body.appendChild(iframe);}function getImages(){var listaProgramasFiltrada=listaProgramas.sort(function(a,b){return b.datacao_filtrada-a.datacao_filtrada;});listaNoticias.sort(function(a,b){return parseInt(b.episodio_id)-parseInt(a.episodio_id);});var content=[];var _loop=function _loop(el){content.push(/*#__PURE__*/_jsx(\"img\",{onMouseOver:function onMouseOver(){return GetEpisode(listaProgramasFiltrada[el].show_id,0,setListaEpisodios);},alt:\"Avatar\",src:listaProgramasFiltrada[el].image_url,width:176,height:180}));};for(var el in listaProgramasFiltrada){_loop(el);}if(programaNoticia.length>0){content.push(/*#__PURE__*/_jsx(\"img\",{alt:\"Avatar\",src:programaNoticia[0].image_url,width:176,height:180}));}if(listaNoticias.length==5){var _loop2=function _loop2(_el){content.push(/*#__PURE__*/_jsxs(\"div\",{children:[listaNoticias[_el].titulo,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:listaNoticias[_el].descricao}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return cria_player(listaNoticias[_el]);},children:\"Play\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]}));};for(var _el in listaNoticias){_loop2(_el);}}return content;}if(listaNoticias!==[]){return/*#__PURE__*/_jsx(Container,{fluid:true,style:{backgroundColor:'#E5E5E5',padding:'10px',width:''},children:conteudoprismic.length!==0&&/*#__PURE__*/_jsx(CalendarioDiario,{conteudo_calendario:conteudoprismic})});}}export default Main;/*<p>{conteudoprismic.results[0].data[\"page-title\"][0].text}</p>\n       <img style={{width:conteudoprismic.results[0].data[\"page-image\"].width, height:conteudoprismic.results[0].data[\"page-image\"].height}}src={conteudoprismic.results[0].data[\"page-image\"].url}></img>\n       <p>{conteudoprismic.results[0].data[\"page-body\"][0].text}</p>*/","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/descricao_funcional/src/AppDiario.js"],"names":["React","Component","useEffect","useState","GetSpreaker","GetEpisode","GetDescription","MultiPlayer","Prismic","Date","Link","RichText","GetPrismic","CalendarioDiario","Container","Main","podcast","setPodcast","dados","setDados","userID","setUserID","listaProgramas","setListaProgramas","programaNoticia","setProgramaNoticia","listaEpisodios","setListaEpisodios","listaNoticias","setListaNoticias","descricaoEpisodio","setDescricaoEpisodio","conteudoprismic","setConteudoPrismic","cria_player","lista_ordenada_episodios","iframe","document","createElement","html","episodio_id","src","sandbox","width","height","frameborder","body","appendChild","getImages","listaProgramasFiltrada","sort","a","b","datacao_filtrada","parseInt","content","el","push","show_id","image_url","length","titulo","descricao","backgroundColor","padding"],"mappings":"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","sourcesContent":["import {\n  React,\n  Component,\n  useEffect,\n  useState\n} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GetSpreaker from \"./getSpreaker.js\"\nimport GetEpisode from \"./getEpisode.js\"\nimport GetDescription from \"./getDescription.js\"\nimport MultiPlayer from \"./Multiplayer.js\";\nimport Prismic from '@prismicio/client'\nimport { Date, Link, RichText } from 'prismic-reactjs'\n//import client from './prismic-configuration.js'\nimport GetPrismic from \"./getprismic.js\";\n\nimport CalendarioDiario from \"./CalendarioDiario.js\";\nimport { Container } from \"react-bootstrap\";\n\nfunction Main() {\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [userID, setUserID] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n  const [programaNoticia, setProgramaNoticia] = useState([])\n  const [listaEpisodios, setListaEpisodios] = useState([])\n  const [listaNoticias, setListaNoticias] = useState([])\n  const [descricaoEpisodio, setDescricaoEpisodio] = useState([])\n  const [conteudoprismic, setConteudoPrismic] = useState([])\n\n\n\n  useEffect(() => {\n    GetSpreaker(setDados, setListaProgramas, setProgramaNoticia)\n    GetEpisode(4119263, setListaNoticias, 0)\n    GetPrismic(setConteudoPrismic)\n    //GetPrismic(Client)\n    //GetDescription(43826958, setDescricaoEpisodio) //Pegando a descrição de forma estática de um episodio em específico \n  }, []);\n\n\n  \n\n\n  \n  function cria_player(lista_ordenada_episodios){\n    lista_ordenada_episodios = lista_ordenada_episodios\n    const iframe = document.createElement('iframe');\n    const html = \"https://widget.spreaker.com/player?episode_id=\"  + lista_ordenada_episodios.episodio_id + \"&hide-logo=true\"; \n    /*No link https://developers.spreaker.com/guides/embedding-the-player/ ele mostra as opções que existem no player, como mudaça para o tema dark, autoplay e \n    coisas do genero. Para implementar tais opções, só é necessario adicionar após a variável de ID do episodio ou do show um &... \n    Como está acima, &theme=dark ativa o tema dark, se fosse uma opção como hide-logo seria &hide-logo=true. */ \n    iframe.src = html;\n    iframe.sandbox = 'allow-scripts allow-popups';\n    iframe.width = \"50%\";\n    iframe.height=\"100px\";\n    iframe.frameborder=\"0\";\n    document.body.appendChild(iframe);\n  }\n\n  function getImages(){\n    const listaProgramasFiltrada = listaProgramas.sort((a, b) => b.datacao_filtrada - a.datacao_filtrada)\n    listaNoticias.sort((a, b) => parseInt(b.episodio_id) - parseInt(a.episodio_id))\n    \n    \n    let content = []\n    for (let el in listaProgramasFiltrada){\n      content.push(<img onMouseOver={() => GetEpisode(listaProgramasFiltrada[el].show_id, 0,setListaEpisodios)}\n        alt=\"Avatar\" src={listaProgramasFiltrada[el].image_url} width={176} height={180}/>)\n\n    }\n    if(programaNoticia.length > 0){\n      content.push(<img \n      alt=\"Avatar\" src={programaNoticia[0].image_url} width={176} height={180}/>)\n    }\n\n    if(listaNoticias.length == 5){\n      for(let el in listaNoticias){\n        content.push(<div>{listaNoticias[el].titulo}<br></br><span>{listaNoticias[el].descricao}</span><button onClick={()=>cria_player(listaNoticias[el])}>Play</button><br></br><br></br></div>)\n      }\n    }\n\n    \n    return content\n\n    \n   }\n  \n   \n  \n  if (listaNoticias !== []) {\n    \n    return (\n      <Container fluid style={{backgroundColor:'#E5E5E5', padding:'10px', width:''}}>\n        {/*<MultiPlayer urls={[\"http://servidor21.brlogic.com:7712/live\"]}/>\n        <img style={{}} src=\"fundo_broadcast.png\"/>\n\n      \n        <p>Resultados para: {dados.fullname}</p>\n       {dados.image_url !== undefined &&(\n        getImages()\n        \n       )}*/\n       }\n        \n       {conteudoprismic.length !== 0 &&\n       \n       <CalendarioDiario conteudo_calendario={conteudoprismic} />\n       }\n\n  </Container>\n\n      \n    )\n   \n    }\n}\n\nexport default Main;\n/*<p>{conteudoprismic.results[0].data[\"page-title\"][0].text}</p>\n       <img style={{width:conteudoprismic.results[0].data[\"page-image\"].width, height:conteudoprismic.results[0].data[\"page-image\"].height}}src={conteudoprismic.results[0].data[\"page-image\"].url}></img>\n       <p>{conteudoprismic.results[0].data[\"page-body\"][0].text}</p>*/"]},"metadata":{},"sourceType":"module"}