{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [podcast, setPodcast] = useState([]);\n  const [dados, setDados] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [listaProgramas, setListaProgramas] = useState([]);\n  useEffect(() => {\n    search();\n  }, []);\n\n  function search() {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(dados => {\n      setDados(dados.response.user);\n      return dados;\n    }).then(dados => {\n      if (dados.response.user.user_id != undefined) {\n        fetch(`https://api.spreaker.com/v2/users/` + dados.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n          setPodcast(podcasts.response.items);\n          return podcasts;\n        }).then(podcasts => {\n          let tamanho = podcasts.response.items.length;\n          var lista_programas = [];\n\n          for (var i = 0; i < tamanho; i++) {\n            if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n              if (podcasts.response.items[i].last_episode_at != null) {\n                lista_programas.push({\n                  show_id: podcasts.response.items[i].show_id,\n                  title: podcasts.response.items[i].title,\n                  datacao: podcasts.response.items[i].last_episode_at.split(' ')[0],\n                  image_url: podcasts.response.items[i].image_url\n                });\n              }\n            }\n          }\n\n          setListaProgramas(lista_programas);\n        });\n      }\n    });\n  }\n\n  console.log(listaProgramas);\n  const sortedActivities = listaProgramas.sort((a, b) => b.datacao - a.datacao);\n  console.log(sortedActivities);\n\n  if (dados !== []) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", dados.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), dados.image_url !== undefined && /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: dados.image_url,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Main, \"QA9gr8W25mdHY3orCEcWH+1RrQ8=\");\n\n_c = Main;\nexport default Main;\n/*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","useState","Main","podcast","setPodcast","dados","setDados","userID","setUserID","listaProgramas","setListaProgramas","search","chave_acesso","fetch","then","response","json","user","user_id","undefined","podcasts","items","tamanho","length","lista_programas","i","title","last_episode_at","push","show_id","datacao","split","image_url","console","log","sortedActivities","sort","a","b","fullname"],"mappings":"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","sourcesContent":["import {\n  React,\n  Component,\n  useEffect,\n  useState\n} from \"react\";\n\nfunction Main() {\n\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [userID, setUserID] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n\n  useEffect(() => {\n    search()\n  }, []);\n\n  function search() {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n\n    fetch(\n        `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso\n      )\n      .then((response) => response.json())\n      .then((dados) => {\n        setDados(dados.response.user)\n        return dados;\n      })\n      .then((dados) => {\n        if (dados.response.user.user_id != undefined) {\n          fetch(\n              `https://api.spreaker.com/v2/users/` +\n              dados.response.user.user_id +\n              `/shows`\n            )\n            .then((response) => response.json())\n            .then((podcasts) => {\n              setPodcast(podcasts.response.items)\n              return podcasts;\n            })\n            .then((podcasts) => {\n              let tamanho = podcasts.response.items.length;\n              var lista_programas = [];\n              for (var i = 0; i < tamanho; i++) {\n                if (\n                  podcasts.response.items[i].title !=\n                  \"Rádio UFRJ - Informação & Conhecimento\"\n                ) {\n                  if (podcasts.response.items[i].last_episode_at != null) {\n                    lista_programas.push({\n                      show_id: podcasts.response.items[i].show_id,\n                      title: podcasts.response.items[i].title,\n                      datacao: podcasts.response.items[i].last_episode_at.split(' ')[0],\n                      image_url: podcasts.response.items[i].image_url,\n                    });\n                  }\n                }\n              }\n              setListaProgramas(lista_programas)\n            });\n        }\n      });\n  }\n  \n  console.log(listaProgramas)\n  const sortedActivities = listaProgramas.sort((a, b) => b.datacao - a.datacao)\n  console.log(sortedActivities)\n\n  if (dados !== []) {\n    return (\n      <div>\n        <p>Resultados para: {dados.fullname}</p>\n       {dados.image_url !== undefined &&(\n        <img alt=\"Avatar\" src={dados.image_url} width={50} />\n       )}\n      </div>\n    )\n  }\n}\n\n\nexport default Main;\n\n/*    let user_id = data.user_id\n      \n      \n      \n    /*console.log(podcasts)  \n    console.log(podcasts[0])\n\n    let tamanho = podcasts.length\n\n    var lista_programas = [];\n    for (var i = 0; i < tamanho; i++) {\n\n      if(podcasts[i].title != \"Rádio UFRJ - Informação & Conhecimento\"){\n        if(podcasts[i].last_episode_at != null){\n          lista_programas.push({show_id: podcasts[i].show_id, title: podcasts[i].title, datacao: podcasts[i].last_episode_at, image_url: podcasts[i].image_url});\n        }\n      }\n    }\n    console.log(lista_programas)\n    tamanho = lista_programas.length\n    \n    \n  \n\n    return <div>{lista_programas}</div>;\n\n*/"]},"metadata":{},"sourceType":"module"}