{"ast":null,"code":"var _jsxFileName = \"/home/bruno/\\xC1rea de Trabalho/minha-primeira-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [podcast, setPodcast] = useState([]);\n  const [dados, setDados] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [listaProgramas, setListaProgramas] = useState([]);\n  useEffect(() => {\n    search();\n  }, []);\n\n  function search() {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n    fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.json()).then(dados => {\n      setDados(dados.response.user);\n      return dados;\n    }).then(dados => {\n      if (dados.response.user.user_id != undefined) {\n        fetch(`https://api.spreaker.com/v2/users/` + dados.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n          setPodcast(podcasts.response.items);\n          return podcasts;\n        }).then(podcasts => {\n          let tamanho = podcasts.response.items.length;\n          var lista_programas = [];\n          var lista_noticia = [];\n\n          for (var i = 0; i < tamanho; i++) {\n            if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n              if (podcasts.response.items[i].last_episode_at != null) {\n                lista_programas.push({\n                  show_id: podcasts.response.items[i].show_id,\n                  title: podcasts.response.items[i].title,\n                  datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                  last_episode_at: podcasts.response.items[i].last_episode_at,\n                  image_url: podcasts.response.items[i].image_url\n                });\n              }\n            } else {\n              podcasts.response.item[i].show_id;\n            }\n          }\n\n          setListaProgramas(lista_programas);\n        });\n      }\n    });\n  }\n\n  function getImages() {\n    const listaProgramasFiltrada = listaProgramas.sort((a, b) => b.datacao_filtrada - a.datacao_filtrada);\n    let content = [];\n\n    for (let el in listaProgramasFiltrada) {\n      content.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Avatar\",\n        src: listaProgramasFiltrada[el].image_url,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this));\n    }\n\n    return content;\n  }\n\n  if (dados !== []) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Resultados para: \", dados.fullname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), dados.image_url !== undefined && getImages()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Main, \"QA9gr8W25mdHY3orCEcWH+1RrQ8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/minha-primeira-app/src/App.js"],"names":["React","Component","useEffect","useState","Main","podcast","setPodcast","dados","setDados","userID","setUserID","listaProgramas","setListaProgramas","search","chave_acesso","fetch","then","response","json","user","user_id","undefined","podcasts","items","tamanho","length","lista_programas","lista_noticia","i","title","last_episode_at","push","show_id","datacao_filtrada","Date","split","image_url","item","getImages","listaProgramasFiltrada","sort","a","b","content","el","fullname"],"mappings":"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","sourcesContent":["import {\n  React,\n  Component,\n  useEffect,\n  useState\n} from \"react\";\n\nfunction Main() {\n\n  const [podcast, setPodcast] = useState([])\n  const [dados, setDados] = useState([])\n  const [userID, setUserID] = useState([])\n  const [listaProgramas, setListaProgramas] = useState([])\n\n  useEffect(() => {\n    search()\n  }, []);\n\n  function search() {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n\n    fetch(\n        `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso\n      )\n      .then((response) => response.json())\n      .then((dados) => {\n        setDados(dados.response.user)\n        return dados;\n      })\n      .then((dados) => {\n        if (dados.response.user.user_id != undefined) {\n          fetch(\n              `https://api.spreaker.com/v2/users/` +\n              dados.response.user.user_id +\n              `/shows`\n            )\n            .then((response) => response.json())\n            .then((podcasts) => {\n              setPodcast(podcasts.response.items)\n              return podcasts;\n            })\n            .then((podcasts) => {\n              let tamanho = podcasts.response.items.length;\n              var lista_programas = [];\n              var lista_noticia = [];\n              for (var i = 0; i < tamanho; i++) {\n                if (\n                  podcasts.response.items[i].title !=\n                  \"Rádio UFRJ - Informação & Conhecimento\"\n                ) {\n                  if (podcasts.response.items[i].last_episode_at != null) {\n                    lista_programas.push({\n                      show_id: podcasts.response.items[i].show_id,\n                      title: podcasts.response.items[i].title,\n                      datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                      last_episode_at: podcasts.response.items[i].last_episode_at,\n                      image_url: podcasts.response.items[i].image_url,\n                    });\n                  }\n                }\n                else{\n                  podcasts.response.item[i].show_id\n                }\n              }\n              setListaProgramas(lista_programas)\n            });\n        }\n      });\n  }\n\n\n\n  function getImages(){\n    const listaProgramasFiltrada = listaProgramas.sort((a, b) => b.datacao_filtrada - a.datacao_filtrada)\n    let content = []\n    for (let el in listaProgramasFiltrada){\n      content.push(<img alt=\"Avatar\" src={listaProgramasFiltrada[el].image_url} width={50} />)\n    }\n    return content\n   }\n  \n  if (dados !== []) {\n    return (\n      <div>\n        <p>Resultados para: {dados.fullname}</p>\n       {dados.image_url !== undefined &&(\n        getImages()\n       )}\n      </div>\n    )\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}