{"ast":null,"code":"function GetSpreaker(setDados,setListaProgramas,setProgramaNoticia){var chave_acesso=\"20e75b947a1909b99b242724438ed46dad9576b1\";fetch(\"https://api.spreaker.com/v2/me?oauth2_access_token=\"+chave_acesso).then(function(response){return response.json();}).then(function(dados){setDados(dados.response.user);return dados;}).then(function(dados){if(dados.response.user.user_id!=undefined){fetch(\"https://api.spreaker.com/v2/users/\"+dados.response.user.user_id+\"/shows\").then(function(response){return response.json();}).then(function(podcasts){return podcasts;}).then(function(podcasts){var tamanho=podcasts.response.items.length;var lista_programas=[];var programa_noticia=[];for(var i=0;i<tamanho;i++){if(podcasts.response.items[i].title!=\"Rádio UFRJ - Informação & Conhecimento\"){if(podcasts.response.items[i].last_episode_at!=null){lista_programas.push({show_id:podcasts.response.items[i].show_id,title:podcasts.response.items[i].title,datacao_filtrada:new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),last_episode_at:podcasts.response.items[i].last_episode_at,image_url:podcasts.response.items[i].image_url});}}else{programa_noticia.push({show_id:podcasts.response.items[i].show_id,title:podcasts.response.items[i].title,image_url:podcasts.response.items[i].image_url});}}setProgramaNoticia(programa_noticia);setListaProgramas(lista_programas);});}});}export default GetSpreaker;","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/descricao_funcional/src/getSpreaker.js"],"names":["GetSpreaker","setDados","setListaProgramas","setProgramaNoticia","chave_acesso","fetch","then","response","json","dados","user","user_id","undefined","podcasts","tamanho","items","length","lista_programas","programa_noticia","i","title","last_episode_at","push","show_id","datacao_filtrada","Date","split","image_url"],"mappings":"AAAA,QAASA,CAAAA,WAAT,CAAqBC,QAArB,CAA+BC,iBAA/B,CAAkDC,kBAAlD,CAAsE,CAClE,GAAIC,CAAAA,YAAY,CAAG,0CAAnB,CAEAC,KAAK,CACG,sDAAwDD,YAD3D,CAAL,CAGKE,IAHL,CAGU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAHV,EAIKF,IAJL,CAIU,SAACG,KAAD,CAAW,CACbR,QAAQ,CAACQ,KAAK,CAACF,QAAN,CAAeG,IAAhB,CAAR,CACA,MAAOD,CAAAA,KAAP,CACH,CAPL,EAQKH,IARL,CAQU,SAACG,KAAD,CAAW,CACb,GAAIA,KAAK,CAACF,QAAN,CAAeG,IAAf,CAAoBC,OAApB,EAA+BC,SAAnC,CAA8C,CAE1CP,KAAK,CACG,qCACAI,KAAK,CAACF,QAAN,CAAeG,IAAf,CAAoBC,OADpB,SADH,CAAL,CAKKL,IALL,CAKU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EALV,EAMKF,IANL,CAMU,SAACO,QAAD,CAAc,CAEhB,MAAOA,CAAAA,QAAP,CACH,CATL,EAUKP,IAVL,CAUU,SAACO,QAAD,CAAc,CAChB,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBC,MAAtC,CACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAG,EAAvB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,OAApB,CAA6BK,CAAC,EAA9B,CAAkC,CAC9B,GACIN,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BC,KAA3B,EACA,wCAFJ,CAGE,CACE,GAAIP,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BE,eAA3B,EAA8C,IAAlD,CAAwD,CACpDJ,eAAe,CAACK,IAAhB,CAAqB,CACjBC,OAAO,CAAEV,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BI,OADnB,CAEjBH,KAAK,CAAEP,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BC,KAFjB,CAGjBI,gBAAgB,CAAE,GAAIC,CAAAA,IAAJ,CAASZ,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BE,eAA3B,CAA2CK,KAA3C,CAAiD,GAAjD,EAAsD,CAAtD,CAAT,CAHD,CAIjBL,eAAe,CAAER,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BE,eAJ3B,CAKjBM,SAAS,CAAEd,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BQ,SALrB,CAArB,EAOH,CACJ,CAbD,IAcI,CACAT,gBAAgB,CAACI,IAAjB,CAAsB,CAClBC,OAAO,CAAEV,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BI,OADlB,CAElBH,KAAK,CAAEP,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BC,KAFhB,CAGlBO,SAAS,CAAEd,QAAQ,CAACN,QAAT,CAAkBQ,KAAlB,CAAwBI,CAAxB,EAA2BQ,SAHpB,CAAtB,EAKH,CACJ,CAEDxB,kBAAkB,CAACe,gBAAD,CAAlB,CACAhB,iBAAiB,CAACe,eAAD,CAAjB,CAEH,CAzCL,EA0CH,CACJ,CAtDL,EAwDH,CAED,cAAejB,CAAAA,WAAf","sourcesContent":["function GetSpreaker(setDados, setListaProgramas, setProgramaNoticia) {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n\n    fetch(\n            `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso \n        )\n        .then((response) => response.json())\n        .then((dados) => {\n            setDados(dados.response.user)\n            return dados;\n        })\n        .then((dados) => {\n            if (dados.response.user.user_id != undefined) {\n                \n                fetch(\n                        `https://api.spreaker.com/v2/users/` +\n                        dados.response.user.user_id +\n                        `/shows`\n                    )\n                    .then((response) => response.json())\n                    .then((podcasts) => {\n                       \n                        return podcasts;\n                    })\n                    .then((podcasts) => {\n                        let tamanho = podcasts.response.items.length;\n                        var lista_programas = [];\n                        var programa_noticia = [];\n                        for (var i = 0; i < tamanho; i++) {\n                            if (\n                                podcasts.response.items[i].title !=\n                                \"Rádio UFRJ - Informação & Conhecimento\"\n                            ) {\n                                if (podcasts.response.items[i].last_episode_at != null) {\n                                    lista_programas.push({\n                                        show_id: podcasts.response.items[i].show_id,\n                                        title: podcasts.response.items[i].title,\n                                        datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                                        last_episode_at: podcasts.response.items[i].last_episode_at,\n                                        image_url: podcasts.response.items[i].image_url\n                                    });\n                                }\n                            }  \n                            else{\n                                programa_noticia.push({\n                                    show_id: podcasts.response.items[i].show_id,    \n                                    title: podcasts.response.items[i].title,\n                                    image_url: podcasts.response.items[i].image_url\n                                })\n                            }\n                        }\n                        \n                        setProgramaNoticia(programa_noticia)\n                        setListaProgramas(lista_programas)\n                       \n                    });\n            }\n        })\n        \n}\n\nexport default GetSpreaker"]},"metadata":{},"sourceType":"module"}