{"ast":null,"code":"function GetSpreaker(setDados, setListaProgramas, setProgramaNoticia) {\n  let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n  fetch(`https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso).then(response => response.text()).then(text => text.length ? JSON.parse(text) : {}).catch(error => {\n    throw error;\n  }).then(dados => {\n    setDados(dados.response.user);\n    return dados;\n  }).then(dados => {\n    if (dados.response.user.user_id != undefined) {\n      fetch(`https://api.spreaker.com/v2/users/` + dados.response.user.user_id + `/shows`).then(response => response.json()).then(podcasts => {\n        return podcasts;\n      }).then(podcasts => {\n        let tamanho = podcasts.response.items.length;\n        var lista_programas = [];\n        var programa_noticia = [];\n\n        for (var i = 0; i < tamanho; i++) {\n          if (podcasts.response.items[i].title != \"Rádio UFRJ - Informação & Conhecimento\") {\n            if (podcasts.response.items[i].last_episode_at != null) {\n              lista_programas.push({\n                show_id: podcasts.response.items[i].show_id,\n                title: podcasts.response.items[i].title,\n                datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                last_episode_at: podcasts.response.items[i].last_episode_at,\n                image_url: podcasts.response.items[i].image_url\n              });\n            }\n          } else {\n            programa_noticia.push({\n              show_id: podcasts.response.items[i].show_id,\n              title: podcasts.response.items[i].title,\n              image_url: podcasts.response.items[i].image_url\n            });\n          }\n        }\n\n        setProgramaNoticia(programa_noticia);\n        setListaProgramas(lista_programas);\n      });\n    }\n  });\n}\n\n_c = GetSpreaker;\nexport default GetSpreaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetSpreaker\");","map":{"version":3,"sources":["/home/bruno/Área de Trabalho/descricao_funcional/src/getSpreaker.js"],"names":["GetSpreaker","setDados","setListaProgramas","setProgramaNoticia","chave_acesso","fetch","then","response","text","length","JSON","parse","catch","error","dados","user","user_id","undefined","json","podcasts","tamanho","items","lista_programas","programa_noticia","i","title","last_episode_at","push","show_id","datacao_filtrada","Date","split","image_url"],"mappings":"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","sourcesContent":["function GetSpreaker(setDados, setListaProgramas, setProgramaNoticia) {\n    let chave_acesso = \"20e75b947a1909b99b242724438ed46dad9576b1\";\n\n    fetch(\n            `https://api.spreaker.com/v2/me?oauth2_access_token=` + chave_acesso \n        )\n        .then((response) => response.text())\n        .then((text)=> text.length ? JSON.parse(text):{})\n        .catch((error)=>{\n            throw error;\n        })\n        .then((dados) => {\n            setDados(dados.response.user)\n            \n            return dados;\n        })\n        .then((dados) => {\n            if (dados.response.user.user_id != undefined) {\n                \n                fetch(\n                        `https://api.spreaker.com/v2/users/` +\n                        dados.response.user.user_id +\n                        `/shows`\n                    )\n                    .then((response) => response.json())\n                    .then((podcasts) => {\n                       \n                        return podcasts;\n                    })\n                    .then((podcasts) => {\n                        let tamanho = podcasts.response.items.length;\n                        var lista_programas = [];\n                        var programa_noticia = [];\n                        for (var i = 0; i < tamanho; i++) {\n                            if (\n                                podcasts.response.items[i].title !=\n                                \"Rádio UFRJ - Informação & Conhecimento\"\n                            ) {\n                                if (podcasts.response.items[i].last_episode_at != null) {\n                                    lista_programas.push({\n                                        show_id: podcasts.response.items[i].show_id,\n                                        title: podcasts.response.items[i].title,\n                                        datacao_filtrada: new Date(podcasts.response.items[i].last_episode_at.split(' ')[0]),\n                                        last_episode_at: podcasts.response.items[i].last_episode_at,\n                                        image_url: podcasts.response.items[i].image_url\n                                    });\n                                }\n                            }  \n                            else{\n                                programa_noticia.push({\n                                    show_id: podcasts.response.items[i].show_id,    \n                                    title: podcasts.response.items[i].title,\n                                    image_url: podcasts.response.items[i].image_url\n                                })\n                            }\n                        }\n                        \n                        setProgramaNoticia(programa_noticia)\n                        setListaProgramas(lista_programas)\n                       \n                    });\n            }\n        })\n        \n}\n\nexport default GetSpreaker"]},"metadata":{},"sourceType":"module"}